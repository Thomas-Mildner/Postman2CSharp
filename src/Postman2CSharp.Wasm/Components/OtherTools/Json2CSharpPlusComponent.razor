@using Xamasoft.JsonClassGenerator
<div id="json-editor" ></div>
<MudButton OnClick="Process">Process</MudButton>
<br/>
@if (_result.Count > 0)
{
    <MudTabs>
        @foreach (var (key, value) in _result)
        {
            <MudTabPanel Text="@key" Icon="@Icons.Code">
                <br />
                <pre><code class="language-csharp">@value</code></pre>
            </MudTabPanel>
        }
    </MudTabs>
}

@code {
    [Inject] private Interop Interop { get; set; } = default!;
    private Dictionary<string, string> _result = new ();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await Interop.InitJsonEditor();
    }
    private Json2CSharpPlus? _json2CSharpPlusSimple;
    private async Task Process()
    {
        var json = await Interop.GetJsonEditorValue();
        _json2CSharpPlusSimple ??= new Json2CSharpPlus(new CSharpCodeWriterConfig(), new DuplicateOptions());
        _result = _json2CSharpPlusSimple.GenerateMoreClasses(json);
    }

}

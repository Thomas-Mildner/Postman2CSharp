<MudBreadcrumbs Style="background: rgba(42, 37, 44, 0.5); border-radius: 6px; margin-top: 10px;" Items="@Items">
    <ItemTemplate Context="item">
        <div class="f-row aic" style="gap: 5px;">
            @{ Dictionary<string, object>? userAttributes = null;}
            @if (item.Text == "Collection")
            {
                var guid = Guid.NewGuid().ToString();
                userAttributes = new Dictionary<string, object>() {{"id", guid}};
                CollectionGuid = guid;
            }
            <MudIcon UserAttributes="userAttributes" Icon="@item.Icon" Size="Size.Small"/>
            @if (item.Disabled)
            {
                <a style="user-select: none;">@item.Text</a>
            }
            else
            {
                <a class="normal" href="@item.Href">@item.Text</a>
            }
        </div>
    </ItemTemplate>
</MudBreadcrumbs>
@code
{
    private string? CollectionGuid { get; set; }
    [Inject] private Interop Interop { get; set; } = null!;
    [Parameter, EditorRequired] public List<BreadcrumbItem> Items { get; set; } = null!;

    protected override async Task OnAfterRenderAsync(bool first)
    {
        if (Items.All(x => x.Text != "Collection") || CollectionGuid == null) return;
        await Interop.FixFaviconViewBox(CollectionGuid);
    }
}

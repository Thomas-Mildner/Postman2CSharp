<PageTitle>@(GetTitle())</PageTitle>
<HeadContent>
    <meta Name="keywords" Content="@GetKeywords()" />
    <meta Property="og:title" Content="@GetTitle()" />
    <meta Name="twitter:title" Content="@GetTitle()" />
    @if (!string.IsNullOrEmpty(GetDescription()))
    {
        <meta Name="description" Content="@(GetDescription())" />
        <meta Property="og:description" Content="@GetDescription()" />
        <meta Name="twitter:description" Content="@GetDescription()" />
    }
</HeadContent>

@code {
    [Inject] private IWebAssemblyHostEnvironment Env { get; set; } = null!;


    [Parameter, EditorRequired] public string Title { get; set; } = null!;
    [Parameter, EditorRequired] public string NotPrerenderingTitle { get; set; } = null!;
    [Parameter, EditorRequired] public string? Description { get; set; }
    [Parameter, EditorRequired] public string Keywords { get; set; } = null!;

    [Parameter] public bool AddPostman2CSharpToTitle { get; set; } = true;

    string GetTitle()
    {
        if (Env.Environment.Equals("Prerendering", StringComparison.InvariantCultureIgnoreCase))
        {
            return AddPostman2CSharpToTitle ? $"{Title} - Postman2CSharp Free Online Toolkit" : Title;
        }
        return NotPrerenderingTitle;
    } 

    string GetDescription()
    {
        if (string.IsNullOrEmpty(Description))
            return "";
        return Description.TrimEnd('.') + ".";
    }

    string GetKeywords()
    {
        var keywords = new HashSet<string>(Keywords.Split(",").Select(x => x.Trim()));
        AddIfNotExist(Title ?? "");
        AddIfNotExist("postman2csharp");
        AddIfNotExist("csharp");
        AddIfNotExist("c#");
        AddIfNotExist("apiclient");
        AddIfNotExist("httpclient");
        AddIfNotExist("convert");
        AddIfNotExist("generate");
        AddIfNotExist("postman");
        AddIfNotExist("collection");
        return string.Join(", ", keywords.Where(x => !string.IsNullOrWhiteSpace(x)));

        void AddIfNotExist(string keyword)
        {
            if (!keywords!.Any(x => x.Equals(keyword, StringComparison.InvariantCultureIgnoreCase)))
            {
                keywords!.Add(keyword);
            }
        }
    }
}
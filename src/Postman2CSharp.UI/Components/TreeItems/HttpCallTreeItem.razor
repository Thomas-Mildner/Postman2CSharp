@using Postman2CSharp.UI.Models
@if (ClassName != null && ApiClientId != null && HttpCallName != null && ApiCollectionId != null && SourceCode != null && _shouldRender)
{
    <MudTreeViewItem Class="file-tree-item" Value="@ClassName" >
        <Content>
            <MudTreeViewItemToggleButton Visible="false" />
            <MudText Style="user-select: none;">@ClassName.Replace(HttpCallName, string.Empty)</MudText>
            @if (AppState.SiteSettings.ShowDownloadInTreeView)
            {
                <MudIconButton Color="@Color.Info" Icon="@Icons.Download" OnClick="DownloadFile" ></MudIconButton>
            }
            <OpenInNewTab NavigateAction="() => Navigate.ToHttpCallClass(ApiCollectionId, ApiClientId, HttpCallName, ClassName)" />
        </Content>
    </MudTreeViewItem>
}

@code {
    [Inject] private AppState AppState { get; set; } = null!;
    [Inject] private Navigate Navigate { get; set; } = null!;
    [Inject] private Interop Interop { get; set; } = null!;

    [Parameter, EditorRequired] public string? ApiCollectionId { get; set; }
    [Parameter, EditorRequired] public string? ApiClientId { get; set; }
    [Parameter, EditorRequired] public string? HttpCallName { get; set; }
    [Parameter, EditorRequired] public string? ClassName { get; set; }
    [Parameter, EditorRequired] public string? SourceCode { get; set; }
    [Parameter, EditorRequired] public bool IsParentExpanded { get; set; }

    private async Task DownloadFile()
    {
        if (ClassName == null || SourceCode == null) return;
        await Interop.DownloadFile(ClassName, SourceCode);
    }

    private string? _cachedApiCollectionId;
    private string? _cachedApiClientId;
    private string? _cachedHttpCallName;
    private string? _cachedClassName;
    private string? _cachedSourceCode;

    private bool _shouldRender;
    protected override bool ShouldRender()
    {
        if (!IsParentExpanded) return false;
        _shouldRender = _cachedApiCollectionId != ApiCollectionId
            || _cachedApiClientId != ApiClientId
            || _cachedHttpCallName != HttpCallName
            || _cachedClassName != ClassName
            || _cachedSourceCode != SourceCode;

        if (_shouldRender)
        {
            _cachedApiCollectionId = ApiCollectionId;
            _cachedApiClientId = ApiClientId;
            _cachedHttpCallName = HttpCallName;
            _cachedClassName = ClassName;
            _cachedSourceCode = SourceCode;
        }

        return _shouldRender;
    }

}

@page "/SupportedFeatures"

<PageHeader Title="Supported Features"
            AddPostman2CSharpToTitle
            NotPrerenderingTitle="Supported Features"
            Description="Postman2CSharp supports a wide range of features including FormData, requests, responses, and query parameters."
            Keywords="supported features, formdata, requests, responses, query parameters, C#, HttpClient" />

<BreadCrumbs Items="@BreadCrumbs"></BreadCrumbs>

<br />

<MudPaper Elevation="4" Class="header-paper">
    <MudText Typo="Typo.h1" Class="mt-4">Supported Features</MudText>

    <br />

    <MudText Typo="Typo.subtitle1">
        I have added all the features need to get you started on your ApiClient. You should be able to generate at least a very good starting point.
        However, if that's not the case and there is a feature that you would like supported, feel free to create an
        <a class="link-normal" href="@GitHubUrls.Issues" target="_blank">issue</a> on GitHub detailing the functionality you would like.
        You are also more than welcome to create the feature yourself and submit a <a class="link-normal" href="@GitHubUrls.Pulls" target="_blank">pull request</a>.
        The generator <b>and</b> website are open source.
    </MudText>
</MudPaper>

<MudDivider Class="my-divider" DividerType="DividerType.FullWidth"></MudDivider>


<div class="info-container" >
    <MudText Typo="Typo.h5">Key</MudText>

    <Break Size="P2CsSize.Medium" />
    <div class="f-column gap-4">
        @foreach (var supportedLevel in Enum.GetValues<SupportedLevel>())
        {
            var iconsAndColor = SupportLevelStyling(supportedLevel);
            <div class="f-row align-items-baseline gap-2">
                <MudIcon Icon="@iconsAndColor.Icon" Size="Size.Small" Color="@iconsAndColor.Color"/>
                <MudText Typo="Typo.subtitle2" Class="mb-0">
                    @supportedLevel.ToString().SplitOnCapitalLetters()
                    @if (!string.IsNullOrWhiteSpace(SupportLevelToText[supportedLevel]))
                    {
                        @: - @SupportLevelToText[supportedLevel]
                    }
                </MudText>
            </div>
        }
    </div>


    <MudTreeView T="string" Style="padding: 25px;" Hover ExpandOnClick>
        <MudTreeViewItem T="string" Value="@("Authorization Types")">
            @FeatureTreeItem("Inherited From Parent", SupportedLevel.FullySupported)
            @FeatureTreeItem("No Auth", SupportedLevel.FullySupported)
            @FeatureTreeItem("Basic Auth", SupportedLevel.FullySupported)
            @FeatureTreeItem("Api Key", SupportedLevel.FullySupported)
            @FeatureTreeItem("Bearer", SupportedLevel.FullySupported)
            @FeatureTreeItem("OAuth2", SupportedLevel.ContinueWithCaution)
            @FeatureTreeItem("JWT Bearer", SupportedLevel.ContinueWithCaution)
            @FeatureTreeItem("AWS Signature", SupportedLevel.ContinueWithCaution)
            @FeatureTreeItem("OAuth", SupportedLevel.NotSupported)
            @FeatureTreeItem("Digest", SupportedLevel.NotSupported)
            @FeatureTreeItem("Hawk", SupportedLevel.NotSupported)
            @FeatureTreeItem("NTLM", SupportedLevel.NotSupported)
            @FeatureTreeItem("Akamai EdgeGrid", SupportedLevel.NotSupported)
        </MudTreeViewItem>
        <MudTreeViewItem Value="@("Request Parts")">
            <MudTreeViewItem Value="@("Body")">
                <MudTreeViewItem Value="@("Raw")">
                    @FeatureTreeItem("Text", SupportedLevel.FullySupported)
                    @FeatureTreeItem("Json", SupportedLevel.FullySupported)
                    @FeatureTreeItem("Xml", SupportedLevel.FullySupported)
                    @FeatureTreeItem("Html", SupportedLevel.PartiallySupported)
                    @FeatureTreeItem("Javascript", SupportedLevel.NotSupported)
                </MudTreeViewItem>
                @FeatureTreeItem("Form Data", SupportedLevel.FullySupported)
                @FeatureTreeItem("Form Url Encoded", SupportedLevel.FullySupported)
                @FeatureTreeItem("Binary", SupportedLevel.FullySupported)
                @FeatureTreeItem("GraphQL", SupportedLevel.PartiallySupported)
            </MudTreeViewItem>
            @FeatureTreeItem("Query Parameters", SupportedLevel.FullySupported)
            @FeatureTreeItem("Headers", SupportedLevel.FullySupported)
            @FeatureTreeItem("Cookies", SupportedLevel.NotSupported)
        </MudTreeViewItem>
        <MudTreeViewItem Value="@("Response Parts")">
            <MudTreeViewItem Value="@("Body")">
                @FeatureTreeItem("Json", SupportedLevel.FullySupported)
                @FeatureTreeItem("Xml", SupportedLevel.FullySupported)
                @FeatureTreeItem("All other types", SupportedLevel.PartiallySupported)
            </MudTreeViewItem>
            @FeatureTreeItem("Headers", SupportedLevel.NotSupported)
        </MudTreeViewItem>
        <MudTreeViewItem Value="@("Variables")">
            <MudTreeViewItem Value="@("Location")">
                @FeatureTreeItem("Host", SupportedLevel.FullySupported)
                @FeatureTreeItem("Path", SupportedLevel.FullySupported)
                @FeatureTreeItem("Headers", SupportedLevel.FullySupported)
                @FeatureTreeItem("Query Parameters", SupportedLevel.FullySupported)
                @FeatureTreeItem("Authorization", SupportedLevel.FullySupported)
                @FeatureTreeItem("Body", SupportedLevel.NotSupported)
            </MudTreeViewItem>
            @FeatureTreeItem("Collection Variables", SupportedLevel.FullySupported)
            @FeatureTreeItem("Environment Variables", SupportedLevel.PartiallySupported)
            @FeatureTreeItem("Global Variables", SupportedLevel.PartiallySupported)
            @FeatureTreeItem("Data Variables", SupportedLevel.PartiallySupported)
            @FeatureTreeItem("Local Variables", SupportedLevel.PartiallySupported)
        </MudTreeViewItem>
    </MudTreeView>
</div>

@code {
    [Inject] private TabsService TabsService { get; set; } = null!;
    [Inject] private AnalyticsInterop AnalyticsInterop { get; set; } = null!;
    private static readonly List<BreadcrumbItem> BreadCrumbs = new()
    {
        new("Home", "/", icon: Icons.Home),
        new("Supported Features", "/", true, Icons.ContactSupport)
    };

    protected override async Task OnInitializedAsync()
    {
        await TabsService.SetHome(null);
        await AnalyticsInterop.TrackAction("Visited supported features");
    }

    private Dictionary<SupportedLevel, string?> SupportLevelToText = new()
    {
        { SupportedLevel.FullySupported, null },
        { SupportedLevel.PartiallySupported, "Generated code will come working out of the box but solutions may be subpar." },
        { SupportedLevel.ContinueWithCaution, "Generated code will requires manual fixes and inspection." },
        { SupportedLevel.NotSupported, null }
    };

    private static (string Icon, Color Color) SupportLevelStyling(SupportedLevel supportedLevel)
    {
        return supportedLevel switch
        {
            SupportedLevel.FullySupported => (Icons.Check, Color.Success),
            SupportedLevel.PartiallySupported => (Icons.RemoveCircle, Color.Default),
            SupportedLevel.ContinueWithCaution => (Icons.Warning, Color.Warning),
            SupportedLevel.NotSupported => (Icons.Cancel, Color.Error),
            _ => throw new ArgumentOutOfRangeException(nameof(supportedLevel), supportedLevel, null)
        };
    }

    private static RenderFragment FeatureTreeItem(string feature, SupportedLevel supportedLevel)
    {
        var (icon, color) = SupportLevelStyling(supportedLevel);
        return @<MudTreeViewItem Value="feature"IconColor="color" Icon="@icon"></MudTreeViewItem>;
    }

    private enum SupportedLevel
    {
        FullySupported,
        PartiallySupported,
        ContinueWithCaution,
        NotSupported
    }
}
